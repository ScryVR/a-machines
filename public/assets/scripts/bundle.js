(()=>{"use strict";var e={d:(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}};(()=>{var t={};e.r(t),e.d(t,{building:()=>b,buttonMachine:()=>u,foundation:()=>y,movingMachine:()=>g,textInputMachine:()=>p,textRenderer:()=>m,triggerTest:()=>h});var i={};function n(e,t){var i;let n=e;return null!=(i=e.match(/[a-zA-Z-]*="{{[^}}]*}}"/gm))&&i.forEach((e=>{const[i,a]=e.split("=");var o=`has-mdeps mdep-${i}-${o=a.replace('"{{',"").replace('}}"',"")} ${i}="${null!=(o=t[o])?o:""}"`;n=n.replace(e,o)})),null!=(i=e.match(/{{[^}}]*}}/gm))&&i.forEach((e=>{var i=`<span has-mdeps mdep--${i=e.replace("{{","").replace("}}","")}>${null!=(i=t[i])?i:""}</span>`;n=n.replace(e,i)})),n}function a({name:e,template:t,data:i={},hooks:a={},handlers:o={}}){(function(e){const t=[];return null!=(e=e.match(/{{([^}}]*)}}/gm))&&e.forEach((e=>{e=e.replace("{{","").replace("}}",""),t.push(e)})),t})(t).forEach((e=>{i[e]=null!=(e=i[e])?e:""})),i._stateVars=Object.keys(i),t=n(t,i);var r=class extends HTMLElement{constructor(){super()}static get observedAttributes(){return i._stateVars.map((e=>e.toLowerCase()))}connectedCallback(){this.innerHTML=t,this.addListeners(),this.dependencyTree=this.parseDependencies(),Object.assign(a,this.getRenderHooks({data:i,hooks:a})),this.state=function(e,t){const{data:i={},hooks:n={}}=t;return new Proxy(i,{get:(e,t)=>"addHook"===t?(e,t)=>{n[e]||(n[e]=[]),n[e].push(t)}:Reflect.get(e,t),set(t,i,a){var o;return null!=(o=n[i])&&o.forEach((n=>n.call(e,a,t[i]))),Reflect.set(t,i,a)}})}(this,{data:i,hooks:a}),this.handlers=o,this.state._stateVars.forEach((e=>{this.hasAttribute(e)&&this.state&&(this.state[e]=this.getAttribute(e))}))}attributeChangedCallback(e,t,n){var a;this.state&&(a=i._stateVars.find((t=>t.toLowerCase()===e)),this.state[a]=n)}parseDependencies(){const e={};return this.querySelectorAll("[has-mdeps]").forEach((t=>{t.getAttributeNames().filter((e=>e.startsWith("mdep"))).forEach((n=>{let[,a,o]=n.split("-");(o=i._stateVars.find((e=>e.toLowerCase()===o)))&&(e[o]||(e[o]=[]),e[o].push({el:t,attribute:a,innerText:!a}))}))})),e}getRenderHooks({data:e,hooks:t}){return Object.keys(e).reduce(((e,i)=>(e[i]=t[i]||[],e[i].push((e=>{var t;this.dependencyTree&&null!=(t=this.dependencyTree[i])&&t.forEach((({el:t,attribute:i})=>{i?t.setAttribute(i,e):t.innerText=e}))})),e)),{})}addListeners(){this.querySelectorAll("[mbind]").forEach((e=>{const[t,i]=e.getAttribute("mbind").split(":");console.log("Going to add a listener",t,i),e.addEventListener(i,(e=>{this.state[t]=e.detail||e.target.value}))})),this.querySelectorAll("[mhandle]").forEach((e=>{const[t,i]=e.getAttribute("mhandle").split(":");e.addEventListener(i,(e=>{this.handlers[t].call(this,e),e.stopImmediatePropagation()}))}))}};window.customElements.define(e,r)}e.r(i),e.d(i,{activateTouchListener:()=>E,promptForText:()=>x});const o={buildMode:"edit",selectedAction:"interact",user:{energy:100,resources:{wood:{color:"brown",quantity:100},stone:{color:"gray",quantity:100}}}};AFRAME.registerComponent("a-machine",{schema:{machine:{type:"string"}},init(){r[this.data.machine]?(this.el.id||(this.el.id="machine-"+crypto.randomUUID()),this.state={id:this.el.id},Object.entries(r[this.data.machine].listeners).forEach((([e,t])=>{const[i,n="siblings"]=e.split(":");this.el.addEventListener(`aMachine:${i}`,(e=>{t(e,this.state,this.emitFactory(this.data.machine),o)}))})),this.el.addEventListener("click",(e=>{const t=r[this.data.machine].listeners[o.selectedAction];t&&t(e,this.state,this.emitFactory(this.data.machine),o),e.stopPropagation()}))):console.error(`a-machine could not register machine of type ${this.data.machine} - has this machine type been registered?`)},emitFactory(e){return(t,i)=>{var n;(null===(n=r[e].canEmit)||void 0===n?void 0:n.includes(t))?this.emit.call(this,t,i):console.error(`a-machine "${this.data.machine}" tried to emit event "${t}", but did not include it in its "canEmit" array`)}},emit(e,t){const[i,n="siblings"]=e.split(":");let a=[this.el.parentElement];"siblings"===n?a=Array.from(this.el.parentElement.children).filter((e=>e.hasAttribute("a-machine"))):"children"===n?a=Array.from(this.el.children).filter((e=>e.hasAttribute("a-machine"))):"builtins"===n&&(s[i]?s[i].listener({detail:t}):console.warn(`Received a call to a unregistered built-in event: ${i}`)),a.forEach((e=>{e.dispatchEvent(new CustomEvent(`aMachine:${i}`,{detail:t}))}))}});const r={},s={},l=["build","set material"],c={build:["box","sphere","cylinder"],"set material":["red","green","blue"]};function d(e){if(o.user.energy<e)throw new Error("Insufficient energy");o.user.energy-=e}a({name:"a-machine--footer",template:`\n<style>\n  scrolling-selector.has-swiping-indicator::before {\n    content: "";\n    height: 30px;\n    width: 30px;\n    position: absolute;\n    top: 0;\n    left: 60px;\n    background: rgba(0,255,255,0.3);\n    border-radius: 100%;\n    opacity: 0;\n    animation: swipe 800ms infinite ease-out;\n    animation-delay: 3s;\n  }\n  @keyframes swipe {\n    from, to { top: 50px; opacity: 1; }\n    90% { top: 20px; opacity: 1; }\n  }\n  scrolling-selector {\n    transition: max-width 0.8s, padding 0.2s;\n    transition-delay: 0.5s;\n    max-width: 200px;\n  }\n  scrolling-selector.collapsed {\n    max-width: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n</style>\n<scrolling-selector\n  class="has-swiping-indicator"\n  style="position: relative;"\n  options="${["interact","build","multiselect","set material"].join(",")}"\n  mhandle="onSelectAction:select">\n</scrolling-selector>\n<scrolling-selector\n  class="collapsed"\n  id="arg-selector"\n  options=""\n  mhandle="onSelectArg:select"\n>\n</scrolling-selector>\n`,data:{collapsed:!0},hooks:{selectedAction:[e=>{o.selectedAction=e.replace(/\s/g,"_")}],hasArg:[function(e){if(e){const e=c[this.state.selectedAction];this.querySelector("#arg-selector").setAttribute("options",e.join(",")),this.querySelector("#arg-selector").classList.remove("collapsed")}else this.querySelector("#arg-selector").classList.add("collapsed")}]},handlers:{onSelectAction(e){var t;this.state.selectedAction=e.detail.selection,this.state.hasArg=l.includes(e.detail.selection),null===(t=this.querySelector(".has-swiping-indicator"))||void 0===t||t.classList.remove("has-swiping-indicator")},onSelectArg(e){o.actionArg=e.detail.selection}}}),a({name:"scrolling-selector",template:'\n<style>\n  .scrolling-selector .selected-option {\n    color: #0dd !important;\n  }\n  .scrolling-selector button {\n    height: 40px;\n    font-size: 16px;\n    flex-shrink: 0;\n    background: none;\n    outline: none;\n    border: none;\n    padding: 0;\n    margin: 0;\n    color: transparent;\n    transition: color 0.3s;\n  }\n  .scrolling-selector.active button {\n    color: rgba(0,0,0,0.5);\n  }\n  .scrolling-selector {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    max-height: 120px;\n    overflow: auto;\n    pointer-events: auto;\n    scrollbar-width: none;  /* Firefox */\n    scroll-behavior: smooth;\n    position: relative;\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  .empty-spacer {\n    min-height: 40px;\n    width: 100%;\n  }\n</style>\n<div style="position: relative;">\n  <div class="{{scrollUpIndicatorClass}}"></div>\n    <div\n      class="scrolling-selector"\n      mhandle="onScroll:scroll"\n    >\n    </div>\n  <div class="{{scrollDownIndicatorClass}}"></div>\n</div>\n',data:{options:""},hooks:{selectedOption:[function(e,t){e!==t&&this.dispatchEvent(new CustomEvent("select",{detail:{selection:e}}))}],selectedBtn:[function(e){this.querySelector(".selected-option").classList.remove("selected-option"),null==e||e.classList.add("selected-option")}],options:[function(e){const t=e.split(",");this.querySelector(".scrolling-selector").innerHTML=n(function(e,t){return`\n  <div class="empty-spacer"></div>\n  ${e.map((e=>`<button class="${e===t?"selected-option":"not-selected"} noselect" data-option="${e}">${e}</button>`)).join("")}\n  <div class="empty-spacer"></div>\n  `}(t,t[0])),this.querySelector(".scrolling-selector").scrollTop=0,this.state.selectedBtn=this.querySelector("button"),this.state.selectedOption=t[0]}]},handlers:{onScroll(e){const t=Array.from(e.target.querySelectorAll("button")),i=Math.round(e.target.scrollTop/40);this.state.selectedBtn=t[i],this.state.selectedOption=this.state.selectedBtn.getAttribute("data-option"),e.target.classList.add("active"),clearTimeout(this.state.setInactiveTimeout),this.state.setInactiveTimeout=setTimeout((()=>{e.target.classList.remove("active"),e.target.scrollTop=40*Math.round(e.target.scrollTop/40)}),300)}}});const u={name:"button",listeners:{interact:(e,t,i)=>{i("trigger")}},metadata:{interact:{description:"Emit 'trigger' event to siblings"}},canEmit:["trigger"]},h={name:"triggerTest",listeners:{trigger:(e,t)=>{t.count||(t.count=0),t.count++,console.log(`Machine has been triggered ${t.count} times`)},set_material:v},metadata:{trigger:{description:"Update internal trigger count and log event"}}},p={name:"textInput",listeners:{_textChanged:(e,t,i)=>{t.text=e.detail.text,i("textChanged",t)},interact:(e,t,i)=>{i("promptForText:builtins",{id:t.id})},set_material:v},metadata:{_textChanged:{description:"receive internal callback from DOM and progagate to siblings"},interact:{description:"Show input field for text entry"}},canEmit:["promptForText:builtins","textChanged"]},m={name:"textRenderer",listeners:{textChanged:(e,t)=>{document.getElementById(t.id).setAttribute("text",{value:e.detail.text,side:"double"})}},metadata:{textChanged:{description:"Show text in VR environment"}}},g={name:"movingMachine",listeners:{trigger:(e,t,i)=>{document.getElementById(t.id).emit("startAnimation",null,!1)},set_material:v},metadata:{trigger:{description:"Directly modify object3D to move entity"}}},b={name:"building",canEmit:["activateTouchListener:builtins"],metadata:{drag:{description:"Resize object"},twoFingerDrag:{description:"Move object"}},listeners:{interact:(e,t,i)=>{console.log("State",t),t.el=document.getElementById(t.id),t.initialState={position:Object.assign({},t.el.object3D.position),scale:Object.assign({},t.el.object3D.scale)},t.el.setAttribute("material",{transparent:!0,opacity:.7});const{face:{normal:{x:n,y:a,z:o}},uv:r}=e.detail.intersection;t.dragProperties={y:{resizeMultiplier:r.y<.5?-1:1,offsetMultiplier:1,attribute:"y"},x:{resizeMultiplier:r.x<.5?-1:1,offsetMultiplier:-n||o,attribute:Math.abs(o)>Math.abs(n)?"x":"z"}},i("activateTouchListener:builtins",{id:t.id})},set_material:v,drag:(e,t)=>{const{x:i,y:n}=e.detail.delta;if(Math.abs(i)>Math.abs(n)){const{resizeMultiplier:e,offsetMultiplier:n}=t.dragProperties.x;t.el.object3D.scale[t.dragProperties.x.attribute]+=i/100*e,t.el.object3D.position[t.dragProperties.x.attribute]+=i/200*n}else{const{resizeMultiplier:e,offsetMultiplier:i}=t.dragProperties.y;t.el.object3D.scale[t.dragProperties.y.attribute]-=n/100*e,t.el.object3D.position[t.dragProperties.y.attribute]-=n/200*i}},twoFingerDrag:(e,t)=>{const{x:i,y:n}=e.detail.delta;if(Math.abs(i)>Math.abs(n)){const{offsetMultiplier:e}=t.dragProperties.x;t.el.object3D.position[t.dragProperties.x.attribute]+=i/100*e}else t.el.object3D.position[t.dragProperties.y.attribute]-=n/100},build:f,cancelBuilding:(e,t)=>{t.el.object3D.position.set(t.initialState.position.x,t.initialState.position.y,t.initialState.position.z),t.el.object3D.scale.set(t.initialState.scale.x,t.initialState.scale.y,t.initialState.scale.z),t.el.setAttribute("material",{transparent:!0,opacity:1})},doneBuilding:(e,t,i,n)=>{try{d(10),console.log("Remaining energy",n.user.energy)}catch(e){t.el.object3D.position.set(t.initialState.position.x,t.initialState.position.y,t.initialState.position.z),t.el.object3D.scale.set(t.initialState.scale.x,t.initialState.scale.y,t.initialState.scale.z)}t.el.setAttribute("material",{transparent:!0,opacity:1})}}},y={name:"foundation",listeners:{build:f},metadata:{build:{description:"Create a new structure."}}};function v(e,t,i,n){n.actionArg&&document.getElementById(t.id).setAttribute("color",n.actionArg)}function f(e,t,i,n){if(["box","sphere","cylinder"].includes(n.actionArg)){const{detail:{intersection:{point:i,face:{normal:a}}}}=e,o=document.createElement(`a-${n.actionArg}`);o.object3D.position.set(i.x+.5*a.x,i.y+.5*a.y,i.z+.5*a.z),o.setAttribute("a-machine",{machine:"building"}),o.setAttribute("material",e.target.getAttribute("material")),document.getElementById(t.id).parentElement.appendChild(o)}}const x={name:"promptForText",listener:function(e){var t;const i=document.querySelector("a-scene");if(!(null===(t=i.getAttribute("webxr"))||void 0===t?void 0:t.overlayElement))return void console.warn("a-machine could not prompt for text - no webxr.overlayElement defined on a-scene");const n=document.createElement("div");n.innerHTML="<textarea></textarea><button>Submit</button>",n.querySelector("button").addEventListener("click",(()=>{A(e.detail.id,"_textChanged",{text:n.querySelector("textarea").value}),n.remove()})),i.getAttribute("webxr").overlayElement.appendChild(n),n.querySelector("textarea").focus()},metadata:{"promptForText:builtins":{description:"Show text input modal with submit button"}},canEmit:["_textChanged"]},E={name:"activateTouchListener",metadata:{"activateTouchListener:builtins":{description:"Add drag handler to DOM overlay"}},listener:function(e){var t;w=e.detail.id;let i=document.querySelector(".a-machine-touch-listener");if(i)return i.style.pointerEvents="auto",void(i.style.visibility="visible");const n=document.querySelector("a-scene");if(!(null===(t=n.getAttribute("webxr"))||void 0===t?void 0:t.overlayElement))return void console.warn("a-machine could not prompt for text - no webxr.overlayElement defined on a-scene");i=document.createElement("div"),i.classList.add("a-machine-touch-listener"),customElements.get("a-machine-touch-ui")?i.innerHTML="<a-machine-touch-ui></a-machine-touch-ui>":(console.warn("To add custom UI to the touch listener, define a Web Component named <a-machine-touch-ui>"),i.innerHTML="<button id='done-btn'>Done</button><button id='cancel-btn'>Cancel</button>",i.querySelector("#done-btn").addEventListener("click",(()=>{A(w,"doneBuilding",{}),i.style.pointerEvents="none",i.style.visibility="hidden"})),i.querySelector("#cancel-btn").addEventListener("click",(()=>{A(w,"cancelBuilding",{}),i.style.pointerEvents="none",i.style.visibility="hidden"})));let a=null;i.addEventListener("touchstart",(e=>{a=e.touches[0]}),{passive:!0}),i.addEventListener("touchmove",(e=>{const t={x:e.touches[0].clientX-a.clientX,y:e.touches[0].clientY-a.clientY};1===e.touches.length&&A(w,"drag",{delta:t}),2===e.touches.length&&A(w,"twoFingerDrag",{delta:t}),a=e.touches[0]}),{passive:!0}),n.getAttribute("webxr").overlayElement.appendChild(i)},canEmit:["drag","twoFingerDrag"]};let w="";function A(e,t,i){document.getElementById(e).dispatchEvent(new CustomEvent(`aMachine:${t}`,{detail:i}))}Object.values(t).forEach((function(e){if(r[e.name])throw new Error(`a-machine tried to register ${e.name}, but a machine with this name is already registered`);r[e.name]=e})),Object.entries(i).forEach((([e,t])=>function(e,t){if(s[e])throw new Error(`a-machine tried to register ${e}, but a built-in with this name is already registered`);s[e]=t}(e,t)))})()})();